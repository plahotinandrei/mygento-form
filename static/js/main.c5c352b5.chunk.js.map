{"version":3,"sources":["components/ApplicantForm/FileInput/FileInput.module.css","components/ApplicantForm/ApplicantForm.module.css","assets/img/form-sprite.svg","components/ApplicantForm/FileInput/FileInput.js","components/ApplicantForm/ApplicantForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FileInput","props","useDropzone","onDrop","acceptedFiles","console","log","onChange","maxFiles","getRootProps","getInputProps","className","styles","fileInput","values","indexOf","undefined","length","onClick","onRemove","file","errors","error","clip","href","sprite","fileName","close","drop","multiple","plus","dropText","ApplicantForm","validationSchema","yup","shape","firstname","required","lastname","email","of","test","value","size","name","nullable","notRequired","gender","policycheck","oneOf","getError","touched","getErrorClass","errorInput","getArrErrorsMessages","result","Array","isArray","forEach","push","Object","applicantForm","title","initialValues","gitlink","validateOnBlur","onSubmit","handleChange","handleBlur","isValid","handleSubmit","dirty","form","groupTitle","personal","personalInput","htmlFor","label","input","placeholder","type","onBlur","arrayHelper","fileList","getFileSchema","remove","replace","Boolean","map","i","genderGroup","policychec","checked","sendBtn","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5c352b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileInput\":\"FileInput_fileInput__2PJaf\",\"file\":\"FileInput_file__DH3lZ\",\"error\":\"FileInput_error__xxMbg\",\"clip\":\"FileInput_clip__2_5Oc\",\"close\":\"FileInput_close__WAXNr\",\"fileName\":\"FileInput_fileName__2jpJ6\",\"drop\":\"FileInput_drop__2vEyP\",\"plus\":\"FileInput_plus__1OVZ7\",\"dropText\":\"FileInput_dropText__1eOr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"applicantForm\":\"ApplicantForm_applicantForm__22ATL\",\"title\":\"ApplicantForm_title__2tz8Z\",\"error\":\"ApplicantForm_error__3Uql-\",\"label\":\"ApplicantForm_label__2puqM\",\"input\":\"ApplicantForm_input___W1La\",\"errorInput\":\"ApplicantForm_errorInput__1dPAH\",\"personal\":\"ApplicantForm_personal__3q-kT\",\"gender\":\"ApplicantForm_gender__2X_R9\",\"groupTitle\":\"ApplicantForm_groupTitle__UvtxK\",\"personalInput\":\"ApplicantForm_personalInput__6MAl_\",\"policychec\":\"ApplicantForm_policychec__143p_\",\"genderGroup\":\"ApplicantForm_genderGroup__11WYx\",\"gitlink\":\"ApplicantForm_gitlink__3lQvQ\",\"sendBtn\":\"ApplicantForm_sendBtn__1ytiJ\",\"fileInput\":\"ApplicantForm_fileInput__3UF6R\"};","export default __webpack_public_path__ + \"static/media/form-sprite.03dc6950.svg\";","import React from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport styles from './FileInput.module.css';\r\nimport sprite from './../../../assets/img/form-sprite.svg'\r\n\r\nfunction FileInput(props) {\r\n    const onDrop = (acceptedFiles) => {\r\n        console.log(typeof acceptedFiles);\r\n        props.onChange(acceptedFiles);\r\n    }\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({onDrop, maxFiles: 1})\r\n\r\n    return (\r\n        <div className={styles.fileInput}>   \r\n            {props.values && props.values.indexOf(undefined) && props.values.length ? \r\n                <div onClick={() => props.onRemove()} className={`${styles.file} ${props.errors ? styles.error : \"\"}`}>\r\n                    <svg className={styles.clip}>\r\n                        <use href={sprite + '#paper-clip'}/>\r\n                    </svg>\r\n                    <span className={styles.fileName}>\r\n                        {props.values[0]['name']}\r\n                    </span>\r\n                    <svg className={styles.close}>\r\n                        <use href={sprite + '#close'}/>\r\n                    </svg>\r\n                </div>\r\n                : \r\n                <div {...getRootProps()} className={styles.drop}>\r\n                    <input {...getInputProps()} multiple={false}/>\r\n                    <svg className={styles.plus}>\r\n                        <use href={sprite + '#plus'}/>\r\n                    </svg>\r\n                    <span className={styles.dropText}>Загрузить резюме</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileInput;","import React from 'react';\r\nimport {FieldArray, Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport styles from './ApplicantForm.module.css';\r\nimport FileInput from './FileInput/FileInput.js';\r\n\r\nconst ApplicantForm = (props) => {\r\n    const validationSchema = yup.object().shape({\r\n        firstname: yup.string().required('Введите имя'),\r\n        lastname: yup.string().required('Введите фамилию'),\r\n        email: yup.string().email('Пожалуйста укажите электронную почту').required('Введите электронную почту'),\r\n        file: yup.array().of(yup.object().shape({\r\n            file: yup.mixed().test('fileSize', 'загружайте файл размером не более 16 mb', (value) => {\r\n                if(!value) return false\r\n                return value.size < 16777216\r\n            }),\r\n            name: yup.string()\r\n        }).nullable()).notRequired(),\r\n        gender: yup.string().required('Укажите пол'),\r\n        policycheck: yup.boolean().oneOf([true], 'Обязательное поле')\r\n    })\r\n    //.matches(/([А-Яа-я|^0-9])/, 'В имени могут быть только буквы')\r\n\r\n    const getFileSchema = (file) => file && ({\r\n        file: file,\r\n        type: file.type,\r\n        name: file.name\r\n    })\r\n\r\n    const getError = (touched, error) => {\r\n        return touched && error && <span className={styles.error}>{error}</span>\r\n    }\r\n\r\n    const getErrorClass = (touched, error) => {\r\n        return touched && error && styles.errorInput\r\n    }\r\n\r\n    const getArrErrorsMessages = (errors) => {\r\n        const result= [];\r\n        errors && Array.isArray(errors) && errors.forEach((value) => {\r\n            if(typeof value == 'string') {\r\n                result.push(value);\r\n            }else if(typeof value == 'object') {\r\n                Object.values(value).forEach((error) => {\r\n                    result.push(error);\r\n                })\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.applicantForm}>\r\n            <h1 className={styles.title}>Анкета соискателя</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    firstname: '',\r\n                    lastname: '',\r\n                    email: '',\r\n                    file: undefined,  \r\n                    gender: '',\r\n                    gitlink: '',\r\n                    policycheck: false\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={(values) => {console.log(values)}}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => {\r\n                    \r\n                    return (\r\n                        <div className={styles.form}>\r\n                            <p className={styles.groupTitle}>Личные данные</p>\r\n                            <div className={styles.personal}>                                \r\n                                <div className={styles.personalInput}>\r\n                                    <label htmlFor='firstname'  className={styles.label}>Имя*</label>\r\n                                    <input \r\n                                        className={`${getErrorClass(touched.firstname, errors.firstname)} ${styles.input}`}\r\n                                        placeholder='Имя'\r\n                                        type='text' \r\n                                        name='firstname'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.firstname}\r\n                                    />   <br/>\r\n                                    {getError(touched.firstname, errors.firstname)}\r\n                                </div>\r\n                                <div className={styles.personalInput}>\r\n                                    <label htmlFor='lastname'  className={styles.label}>Фамилия*</label>\r\n                                    <input \r\n                                        className={`${getErrorClass(touched.lastname, errors.lastname)} ${styles.input}`}\r\n                                        placeholder='Фамилия'\r\n                                        type='text' \r\n                                        name='lastname'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.lastname}\r\n                                    />   <br/>\r\n                                    {getError(touched.lastname, errors.lastname)}\r\n                                </div>\r\n                                <div className={styles.personalInput}>\r\n                                    <label htmlFor='email' className={styles.label}>Электронная почта*</label>\r\n                                    <input \r\n                                        className={`${getErrorClass(touched.email, errors.email)} ${styles.input}`}\r\n                                        placeholder='Электронная почта'\r\n                                        type='email' \r\n                                        name='email'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                    />   <br/>\r\n                                    {getError(touched.email, errors.email)}\r\n                                </div>\r\n                                <FieldArray name='file'>\r\n                                    {(arrayHelper) => {\r\n                                        const onChange = (fileList) => {\r\n                                            const file = getFileSchema(fileList[0]);\r\n                                            if(!file) {\r\n                                                arrayHelper.remove(0);\r\n                                            };\r\n                                            if(Array.isArray(values.file)) {\r\n                                                arrayHelper.replace(0, file)\r\n                                            }else {\r\n                                                arrayHelper.push(file)\r\n                                            }\r\n                                        }\r\n\r\n                                        const onRemove = () => {\r\n                                            arrayHelper.remove(0);\r\n                                        }\r\n\r\n                                        return (\r\n                                            <div className={`${styles.personalInput} ${styles.fileInput}`}>\r\n                                                <FileInput \r\n                                                    values = {values.file}\r\n                                                    onChange = {onChange}\r\n                                                    onRemove= {onRemove}\r\n                                                    errors={Boolean(errors.file)}\r\n                                                    \r\n                                                />\r\n                                                {getArrErrorsMessages(errors.file).map((error, i) => {\r\n                                                    return <span className={styles.error} key={i}>{error}</span>\r\n                                                })}\r\n                                            </div>\r\n                                            \r\n                                        )\r\n                                    }}\r\n                                </FieldArray>\r\n                            </div>\r\n                            <p className={styles.groupTitle}>Пол* {errors.gender && <span className={styles.error}>{errors.gender}</span>}</p> \r\n                            <div className={styles.gender}>    \r\n                                <div className={styles.genderGroup}>\r\n                                    <label>\r\n                                        <input \r\n                                            name='gender' \r\n                                            type='radio' \r\n                                            value=\"male\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                        Мужской\r\n                                    </label>\r\n                                    \r\n                                    <label>\r\n                                        <input \r\n                                            name='gender' \r\n                                            type='radio' \r\n                                            value=\"female\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            />\r\n                                        Женский\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <p className={styles.groupTitle}>Github</p>\r\n                            <div className={styles.gitlink}>\r\n                                <label htmlFor='email' className={styles.label}>Вставьте ссылку на Github</label>\r\n                                <input \r\n                                    className={styles.input}\r\n                                    placeholder='Вставьте ссылку на Github'\r\n                                    type='text' \r\n                                    name='gitlink'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.gitlink}\r\n                                />\r\n                            </div>\r\n                            <div className={styles.policychec}>\r\n                                <label>\r\n                                    <input\r\n                                        type='checkbox'\r\n                                        name='policycheck'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        checked={values.policycheck}\r\n                                    />\r\n                                    * Я согласен с <span>политикой конфиденциальности</span>\r\n                                </label>\r\n                                {errors.policycheck && <span className={styles.error}>{errors.policycheck}</span>}\r\n                            </div>    \r\n                            <button\r\n                                className={styles.sendBtn}\r\n                                disabled={!isValid || !dirty}\r\n                                onClick={handleSubmit}\r\n                                type='submit'\r\n                            >\r\n                                Отправить\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ApplicantForm","import ApplicantForm from './components/ApplicantForm/ApplicantForm.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <ApplicantForm/>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}