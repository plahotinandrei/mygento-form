{"version":3,"sources":["components/ApplicantForm/FileInput/FileInput.module.css","components/ApplicantForm/ApplicantForm.module.css","components/ApplicantForm/Modals/Modals.module.css","assets/img/form-sprite.svg","components/ApplicantForm/FileInput/FileInput.js","components/ApplicantForm/Modals/FinalModals.js","components/ApplicantForm/Modals/PolicyModal.js","components/ApplicantForm/ApplicantForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FileInput","props","useDropzone","onDrop","acceptedFiles","console","log","onChange","maxFiles","getRootProps","getInputProps","className","styles","fileInput","values","indexOf","undefined","length","onClick","onRemove","file","errors","error","clip","href","sprite","fileName","close","drop","multiple","plus","dropText","FinalModal","Modal","size","aria-labelledby","centered","show","backdrop","content","final","title","name","text","btn","resetForm","onHide","PolicyModal","policy","ApplicantForm","React","useState","finalModalShow","policyModalShow","state","setState","validationSchema","yup","shape","firstname","matches","required","lastname","email","of","test","value","nullable","notRequired","gender","policycheck","oneOf","getError","touched","getErrorClass","errorInput","getArrErrorsMessages","result","Array","isArray","forEach","push","Object","applicantForm","initialValues","gitlink","validateOnBlur","onSubmit","handleChange","handleBlur","isValid","handleSubmit","dirty","form","groupTitle","personal","personalInput","htmlFor","label","input","placeholder","type","onBlur","arrayHelper","fileList","getFileSchema","remove","replace","Boolean","map","i","genderGroup","checked","policychec","onpolicy","e","preventDefault","sendBtn","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57b35468.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileInput\":\"FileInput_fileInput__2PJaf\",\"file\":\"FileInput_file__DH3lZ\",\"error\":\"FileInput_error__xxMbg\",\"clip\":\"FileInput_clip__2_5Oc\",\"close\":\"FileInput_close__WAXNr\",\"fileName\":\"FileInput_fileName__2jpJ6\",\"drop\":\"FileInput_drop__2vEyP\",\"plus\":\"FileInput_plus__1OVZ7\",\"dropText\":\"FileInput_dropText__1eOr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"applicantForm\":\"ApplicantForm_applicantForm__22ATL\",\"title\":\"ApplicantForm_title__2tz8Z\",\"error\":\"ApplicantForm_error__3Uql-\",\"label\":\"ApplicantForm_label__2puqM\",\"input\":\"ApplicantForm_input___W1La\",\"errorInput\":\"ApplicantForm_errorInput__1dPAH\",\"personal\":\"ApplicantForm_personal__3q-kT\",\"gender\":\"ApplicantForm_gender__2X_R9\",\"groupTitle\":\"ApplicantForm_groupTitle__UvtxK\",\"personalInput\":\"ApplicantForm_personalInput__6MAl_\",\"policychec\":\"ApplicantForm_policychec__143p_\",\"genderGroup\":\"ApplicantForm_genderGroup__11WYx\",\"gitlink\":\"ApplicantForm_gitlink__3lQvQ\",\"onpolicy\":\"ApplicantForm_onpolicy__2jY_3\",\"sendBtn\":\"ApplicantForm_sendBtn__1ytiJ\",\"fileInput\":\"ApplicantForm_fileInput__3UF6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Modals_content__3DNd-\",\"title\":\"Modals_title__3kQGg\",\"text\":\"Modals_text__1AVVs\",\"btn\":\"Modals_btn__-9ozS\",\"final\":\"Modals_final__kMlsx\",\"policy\":\"Modals_policy__3YbJT\",\"close\":\"Modals_close__1ZDMN\"};","export default __webpack_public_path__ + \"static/media/form-sprite.03dc6950.svg\";","import React from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport styles from './FileInput.module.css';\r\nimport sprite from './../../../assets/img/form-sprite.svg'\r\n\r\nfunction FileInput(props) {\r\n    const onDrop = (acceptedFiles) => {\r\n        console.log(typeof acceptedFiles);\r\n        props.onChange(acceptedFiles);\r\n    }\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({onDrop, maxFiles: 1})\r\n\r\n    return (\r\n        <div className={styles.fileInput}>   \r\n            {props.values && props.values.indexOf(undefined) && props.values.length ? \r\n                <div onClick={() => props.onRemove()} className={`${styles.file} ${props.errors ? styles.error : \"\"}`}>\r\n                    <svg className={styles.clip}>\r\n                        <use href={sprite + '#paper-clip'}/>\r\n                    </svg>\r\n                    <span className={styles.fileName}>\r\n                        {props.values[0]['name']}\r\n                    </span>\r\n                    <svg className={styles.close}>\r\n                        <use href={sprite + '#close'}/>\r\n                    </svg>\r\n                </div>\r\n                : \r\n                <div {...getRootProps()} className={styles.drop}>\r\n                    <input {...getInputProps()} multiple={false}/>\r\n                    <svg className={styles.plus}>\r\n                        <use href={sprite + '#plus'}/>\r\n                    </svg>\r\n                    <span className={styles.dropText}>Загрузить резюме</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileInput;","import React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport styles from './Modals.module.css';\r\n\r\nconst FinalModal = (props) => {\r\n    const closeModal = () => {\r\n        props.resetForm();\r\n        props.onHide();\r\n    }\r\n    return (\r\n        <Modal\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={props.show}\r\n            backdrop=\"static\"\r\n        >\r\n            <div className={`${styles.content} ${styles.final}`}>\r\n                <p className={styles.title}>Спасибо {props.name}!</p>\r\n                <p className={styles.text}>Мы скоро свяжемся с вами</p>\r\n                <button\r\n                    className={`${styles.btn} btnApp`}\r\n                    onClick={closeModal}\r\n                >\r\n                    Понятно\r\n                </button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default FinalModal;","import {Modal} from 'react-bootstrap';\r\nimport styles from './Modals.module.css';\r\nimport sprite from './../../../assets/img/form-sprite.svg'\r\n\r\nconst PolicyModal = (props) => {\r\n    return (\r\n        <Modal\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={props.show}\r\n            backdrop=\"static\"\r\n        >\r\n            <div className={`${styles.content} ${styles.policy}`}>\r\n                <svg \r\n                    className={styles.close}\r\n                    onClick={props.onHide}\r\n                >\r\n                    <use href={sprite + '#close'}/>\r\n                </svg>\r\n                <p className={styles.title}>Политика конфиденциальности</p>\r\n                <div className={styles.text}>\r\n                    <p className={styles.title}>1. Общие положения</p>\r\n                    <p>Настоящая политика обработки персональных данных составлена в соответствии с требованиями Федерального закона от 27.07.2006. №152-ФЗ «О персональных данных» и определяет порядок обработки персональных данных и меры по обеспечению безопасности персональных данных, предпринимаемые Михайловым Иваном Сергеевичем (далее – Оператор).</p>\r\n\r\n                    <p>1.1. Оператор ставит своей важнейшей целью и условием осуществления своей деятельности соблюдение прав и свобод человека и гражданина при обработке его персональных данных, в том числе защиты прав на неприкосновенность частной жизни, личную и семейную тайну.</p>\r\n\r\n                    <p>1.2. Настоящая политика Оператора в отношении обработки персональных данных (далее – Политика) применяется ко всей информации, которую Оператор может получить о посетителях веб-сайта httpsː//thismywebsite·com.</p>\r\n                    \r\n                    <p className={styles.title}>2. Основные понятия, используемые в Политике</p>\r\n\r\n                    <p>2.1. Автоматизированная обработка персональных данных – обработка персональных данных с помощью средств вычислительной техники;</p>\r\n\r\n                    <p>2.2. Блокирование персональных данных – временное прекращение обработки персональных данных (за исключением случаев, если обработка необходима для уточнения персональных данных);</p>\r\n\r\n                    <p>2.3. Веб-сайт – совокупность графических и информационных материалов, а также программ для ЭВМ и баз данных, обеспечивающих их доступность в сети интернет по сетевому адресу httpsː//thismywebsite·com;</p>\r\n\r\n                    <p>2.4. Информационная система персональных данных — совокупность содержащихся в базах данных персональных данных, и обеспечивающих их обработку информационных технологий и технических средств;</p>\r\n\r\n                    <p>2.5. Обезличивание персональных данных — действия, в результате которых невозможно определить без использования дополнительной информации принадлежность персональных данных конкретному Пользователю или иному субъекту персональных данных;</p>\r\n\r\n                    <p>2.6. Обработка персональных данных – любое действие (операция) или совокупность действий (операций), совершаемых с использованием средств автоматизации или без использования таких средств с персональными данными, включая сбор, запись, систематизацию, накопление, хранение, уточнение (обновление, изменение), извлечение, использование, передачу (распространение, предоставление, доступ), обезличивание, блокирование, удаление, уничтожение персональных данных;</p>\r\n\r\n                    <p>2.7. Оператор – государственный орган, муниципальный орган, юридическое или физическое лицо, самостоятельно или совместно с другими лицами организующие и (или) осуществляющие обработку персональных данных, а также определяющие цели обработки персональных данных, состав персональных данных, подлежащих обработке, действия (операции), совершаемые с персональными данными;</p>\r\n\r\n                    <p>2.8. Персональные данные – любая информация, относящаяся прямо или косвенно к определенному или определяемому Пользователю веб-сайта httpsː//thismywebsite·com;</p>\r\n\r\n                    <p>2.9. Пользователь – любой посетитель веб-сайта httpsː//thismywebsite·com;</p>\r\n\r\n                    <p>2.10. Предоставление персональных данных – действия, направленные на раскрытие персональных данных определенному лицу или определенному кругу лиц;</p>\r\n\r\n                    <p>2.11. Распространение персональных данных – любые действия, направленные на раскрытие персональных данных неопределенному кругу лиц (передача персональных данных) или на ознакомление с персональными данными неограниченного круга лиц, в том числе обнародование персональных данных в средствах массовой информации, размещение в информационно-телекоммуникационных сетях или предоставление доступа к персональным данным каким-либо иным способом;</p>\r\n\r\n                    <p>2.12. Трансграничная передача персональных данных – передача персональных данных на территорию иностранного государства органу власти иностранного государства, иностранному физическому или иностранному юридическому лицу;</p>\r\n\r\n                    <p>2.13. Уничтожение персональных данных – любые действия, в результате которых персональные данные уничтожаются безвозвратно с невозможностью дальнейшего восстановления содержания персональных данных в информационной системе персональных данных и (или) уничтожаются материальные носители персональных данных.</p>\r\n                    \r\n                    <p className={styles.title}>3. Оператор может обрабатывать следующие персональные данные Пользователя</p>\r\n\r\n                    <p>3.1. Фамилия, имя, отчество;</p>\r\n\r\n                    <p>3.2. Номер телефона;</p>\r\n\r\n                    <p>3.3. Адрес электронной почты;</p>\r\n\r\n                    <p>3.4. Также на сайте происходит сбор и обработка обезличенных данных о посетителях (в т.ч. файлов «cookie») с помощью сервисов интернет-статистики (Яндекс Метрика и Гугл Аналитика и других).</p>\r\n\r\n                    <p>3.5. Вышеперечисленные данные далее по тексту Политики объединены общим понятием Персональные данные.</p>\r\n                    \r\n                    <p className={styles.title}>4. Цели обработки персональных данных</p>\r\n\r\n                    <p>4.1. Цель обработки персональных данных Пользователя — заключение, исполнение и прекращение гражданско-правовых договоров; предоставление доступа Пользователю к сервисам, информации и/или материалам, содержащимся на веб-сайте httpsː//thismywebsite·com; уточнение деталей заказа.</p>\r\n\r\n                    <p>4.2. Также Оператор имеет право направлять Пользователю уведомления о новых продуктах и услугах, специальных предложениях и различных событиях. Пользователь всегда может отказаться от получения информационных сообщений, направив Оператору письмо на адрес электронной почты privacy@thismywebsite·com с пометкой «Отказ от уведомлений о новых продуктах и услугах и специальных предложениях».</p>\r\n\r\n                    <p>4.3. Обезличенные данные Пользователей, собираемые с помощью сервисов интернет-статистики, служат для сбора информации о действиях Пользователей на сайте, улучшения качества сайта и его содержания.</p>\r\n                    \r\n                    <p className={styles.title}>5. Правовые основания обработки персональных данных</p>\r\n\r\n                    <p>5.1. Оператор обрабатывает персональные данные Пользователя только в случае их заполнения и/или отправки Пользователем самостоятельно через специальные формы, расположенные на сайте httpsː//thismywebsite·com. Заполняя соответствующие формы и/или отправляя свои персональные данные Оператору, Пользователь выражает свое согласие с данной Политикой.</p>\r\n\r\n                    <p>5.2. Оператор обрабатывает обезличенные данные о Пользователе в случае, если это разрешено в настройках браузера Пользователя (включено сохранение файлов «cookie» и использование технологии JavaScript).</p>\r\n                    \r\n                    <p className={styles.title}>6. Порядок сбора, хранения, передачи и других видов обработки персональных данных</p>\r\n\r\n                    <p>Безопасность персональных данных, которые обрабатываются Оператором, обеспечивается путем реализации правовых, организационных и технических мер, необходимых для выполнения в полном объеме требований действующего законодательства в области защиты персональных данных.</p>\r\n\r\n                    <p>6.1. Оператор обеспечивает сохранность персональных данных и принимает все возможные меры, исключающие доступ к персональным данным неуполномоченных лиц.</p>\r\n\r\n                    <p>6.2. Персональные данные Пользователя никогда, ни при каких условиях не будут переданы третьим лицам, за исключением случаев, связанных с исполнением действующего законодательства.</p>\r\n\r\n                    <p>6.3. В случае выявления неточностей в персональных данных, Пользователь может актуализировать их самостоятельно, путем направления Оператору уведомление на адрес электронной почты Оператора privacy@thismywebsite·com с пометкой «Актуализация персональных данных».</p>\r\n\r\n                    <p>6.4. Срок обработки персональных данных является неограниченным. Пользователь может в любой момент отозвать свое согласие на обработку персональных данных, направив Оператору уведомление посредством электронной почты на электронный адрес Оператора privacy@thismywebsite·com с пометкой «Отзыв согласия на обработку персональных данных».</p>\r\n\r\n                    \r\n                    <p className={styles.title}>7. Трансграничная передача персональных данных</p>\r\n\r\n                    <p>7.1. Оператор до начала осуществления трансграничной передачи персональных данных обязан убедиться в том, что иностранным государством, на территорию которого предполагается осуществлять передачу персональных данных, обеспечивается надежная защита прав субъектов персональных данных.</p>\r\n\r\n                    <p>7.2. Трансграничная передача персональных данных на территории иностранных государств, не отвечающих вышеуказанным требованиям, может осуществляться только в случае наличия согласия в письменной форме субъекта персональных данных на трансграничную передачу его персональных данных и/или исполнения договора, стороной которого является субъект персональных данных.</p>\r\n                    \r\n                    <p className={styles.title}>8. Заключительные положения</p>\r\n\r\n                    <p>8.1. Пользователь может получить любые разъяснения по интересующим вопросам, касающимся обработки его персональных данных, обратившись к Оператору с помощью электронной почты privacy@thismywebsite·com.</p>\r\n\r\n                    <p>8.2. В данном документе будут отражены любые изменения политики обработки персональных данных Оператором. Политика действует бессрочно до замены ее новой версией.</p>\r\n\r\n                    <p>8.3. Актуальная версия Политики в свободном доступе расположена в сети Интернет по адресу httpsː//thismywebsite·com/privacy/.</p>\r\n                </div>\r\n                <button\r\n                    className={`${styles.btn} btnApp`}\r\n                    onClick={props.onHide}\r\n                >\r\n                    Я согласен\r\n                </button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PolicyModal;","import React from 'react';\r\nimport {FieldArray, Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport styles from './ApplicantForm.module.css';\r\nimport FileInput from './FileInput/FileInput.js';\r\nimport FinalModal from './Modals/FinalModals.js';\r\nimport PolicyModal from './Modals/PolicyModal.js';\r\n\r\nconst ApplicantForm = (props) => {\r\n    const [state, setState] = React.useState({finalModalShow: false, policyModalShow: false});\r\n\r\n    const validationSchema = yup.object().shape({\r\n        firstname: yup.string().matches(/(^[a-zA-Zа-яА-Я_' ']*$)/, 'В имени могут быть только буквы').required('Введите имя'),\r\n        lastname: yup.string().matches(/(^[a-zA-Zа-яА-Я_' ']*$)/, 'В фамилии могут быть только буквы').required('Введите фамилию'),\r\n        email: yup.string().email('Пожалуйста укажите электронную почту').required('Введите электронную почту'),\r\n        file: yup.array().of(yup.object().shape({\r\n            file: yup.mixed().test('fileSize', 'загружайте файл размером не более 16 mb', (value) => {\r\n                if(!value) return false\r\n                return value.size < 16777216\r\n            }),\r\n            name: yup.string()\r\n        }).nullable()).notRequired(),\r\n        gender: yup.string().required('Укажите пол'),\r\n        policycheck: yup.boolean().oneOf([true], 'Обязательное поле')\r\n    })\r\n\r\n    const getFileSchema = (file) => file && ({\r\n        file: file,\r\n        type: file.type,\r\n        name: file.name\r\n    })\r\n\r\n    const getError = (touched, error) => {\r\n        return touched && error && <span className={styles.error}>{error}</span>\r\n    }\r\n\r\n    const getErrorClass = (touched, error) => {\r\n        return touched && error && styles.errorInput\r\n    }\r\n\r\n    const getArrErrorsMessages = (errors) => {\r\n        const result= [];\r\n        errors && Array.isArray(errors) && errors.forEach((value) => {\r\n            if(typeof value == 'string') {\r\n                result.push(value);\r\n            }else if(typeof value == 'object') {\r\n                Object.values(value).forEach((error) => {\r\n                    result.push(error);\r\n                })\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.applicantForm}>\r\n            <h1 className={styles.title}>Анкета соискателя</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    firstname: '',\r\n                    lastname: '',\r\n                    email: '',\r\n                    file: undefined,  \r\n                    gender: '',\r\n                    gitlink: '',\r\n                    policycheck: false\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={(values) => {\r\n                    console.log(values);\r\n                    setState({\r\n                        ...state,\r\n                        finalModalShow: true\r\n                    })\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, resetForm, dirty}) => {\r\n                    \r\n                    return (\r\n                        <>\r\n                        <div className={styles.form}>\r\n                            <p className={styles.groupTitle}>Личные данные</p>\r\n                            <div className={styles.personal}>                                \r\n                                <div className={styles.personalInput}>\r\n                                    <label htmlFor='firstname'  className={styles.label}>Имя*</label>\r\n                                    <input \r\n                                        className={`${getErrorClass(touched.firstname, errors.firstname)} ${styles.input}`}\r\n                                        placeholder='Имя'\r\n                                        type='text' \r\n                                        name='firstname'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.firstname}\r\n                                    />   <br/>\r\n                                    {getError(touched.firstname, errors.firstname)}\r\n                                </div>\r\n                                <div className={styles.personalInput}>\r\n                                    <label htmlFor='lastname'  className={styles.label}>Фамилия*</label>\r\n                                    <input \r\n                                        className={`${getErrorClass(touched.lastname, errors.lastname)} ${styles.input}`}\r\n                                        placeholder='Фамилия'\r\n                                        type='text' \r\n                                        name='lastname'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.lastname}\r\n                                    />   <br/>\r\n                                    {getError(touched.lastname, errors.lastname)}\r\n                                </div>\r\n                                <div className={styles.personalInput}>\r\n                                    <label htmlFor='email' className={styles.label}>Электронная почта*</label>\r\n                                    <input \r\n                                        className={`${getErrorClass(touched.email, errors.email)} ${styles.input}`}\r\n                                        placeholder='Электронная почта'\r\n                                        type='email' \r\n                                        name='email'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                    />   <br/>\r\n                                    {getError(touched.email, errors.email)}\r\n                                </div>\r\n                                <FieldArray name='file'>\r\n                                    {(arrayHelper) => {\r\n                                        const onChange = (fileList) => {\r\n                                            const file = getFileSchema(fileList[0]);\r\n                                            if(!file) {\r\n                                                arrayHelper.remove(0);\r\n                                            };\r\n                                            if(Array.isArray(values.file)) {\r\n                                                arrayHelper.replace(0, file)\r\n                                            }else {\r\n                                                arrayHelper.push(file)\r\n                                            }\r\n                                        }\r\n\r\n                                        const onRemove = () => {\r\n                                            arrayHelper.remove(0);\r\n                                        }\r\n\r\n                                        return (\r\n                                            <div className={`${styles.personalInput} ${styles.fileInput}`}>\r\n                                                <FileInput \r\n                                                    values = {values.file}\r\n                                                    onChange = {onChange}\r\n                                                    onRemove= {onRemove}\r\n                                                    errors={Boolean(errors.file)}\r\n                                                    \r\n                                                />\r\n                                                {getArrErrorsMessages(errors.file).map((error, i) => {\r\n                                                    return <span className={styles.error} key={i}>{error}</span>\r\n                                                })}\r\n                                            </div>\r\n                                            \r\n                                        )\r\n                                    }}\r\n                                </FieldArray>\r\n                            </div>\r\n                            <p className={styles.groupTitle}>Пол* {errors.gender && <span className={styles.error}>{errors.gender}</span>}</p> \r\n                            <div className={styles.gender}>    \r\n                                <div className={styles.genderGroup}>\r\n                                    <label>\r\n                                        <input \r\n                                            name='gender' \r\n                                            type='radio' \r\n                                            value='male'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            checked={values.gender === 'male'}\r\n                                        />\r\n                                        Мужской\r\n                                    </label>\r\n                                    \r\n                                    <label>\r\n                                        <input \r\n                                            name='gender' \r\n                                            type='radio' \r\n                                            value='female'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            checked={values.gender === 'female'}\r\n                                            />\r\n                                        Женский\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <p className={styles.groupTitle}>Github</p>\r\n                            <div className={styles.gitlink}>\r\n                                <label htmlFor='email' className={styles.label}>Вставьте ссылку на Github</label>\r\n                                <input \r\n                                    className={styles.input}\r\n                                    placeholder='Вставьте ссылку на Github'\r\n                                    type='text' \r\n                                    name='gitlink'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.gitlink}\r\n                                />\r\n                            </div>\r\n                            <div className={styles.policychec}>\r\n                                <label>\r\n                                    <input\r\n                                        type='checkbox'\r\n                                        name='policycheck'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        checked={values.policycheck}\r\n                                    />\r\n                                    * Я согласен с&nbsp;\r\n                                    <span \r\n                                        className={styles.onpolicy}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setState({\r\n                                                ...state,\r\n                                                policyModalShow: true\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        политикой конфиденциальности\r\n                                    </span>\r\n                                </label>\r\n                                {errors.policycheck && <span className={styles.error}>{errors.policycheck}</span>}\r\n                            </div>    \r\n                            <button\r\n                                className={`${styles.sendBtn} btnApp`}\r\n                                disabled={!isValid || !dirty}\r\n                                onClick={handleSubmit}\r\n                                type='submit'\r\n                            >\r\n                                Отправить\r\n                            </button>\r\n                        </div>\r\n                        <FinalModal\r\n                            name={values.firstname}\r\n                            show={state.finalModalShow}\r\n                            resetForm={resetForm}\r\n                            onHide={() => {\r\n                                setState({\r\n                                    ...state,\r\n                                    finalModalShow: false\r\n                                })\r\n                            }}\r\n                        />\r\n                        <PolicyModal\r\n                            show={state.policyModalShow}\r\n                            onHide={() => {\r\n                                setState({\r\n                                    ...state,\r\n                                    policyModalShow: false\r\n                                })\r\n                            }}\r\n                        />\r\n                        </>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ApplicantForm","import ApplicantForm from './components/ApplicantForm/ApplicantForm.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/fonts/fonts.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <ApplicantForm/>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}